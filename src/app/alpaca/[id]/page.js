import { generateImageParams } from "@/functions/generateImageParams";
import { AlpacaDetail } from "@/components/alpacaDetail.js";
import { Suspense } from "react";
import Image from "next/image";
import db from "@/functions/db.js";

import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faCircleInfo,
  faHouseFlag,
  faKey,
  faLocationDot,
} from "@fortawesome/free-solid-svg-icons";

export default async function Page({ params }) {
  // TODO error handling when getting data.
  // See old repo https://github.com/purplebugs/alpaca-map/blob/main/client/src/pages/Alpaca.js#L12

  const result = await db.getAnimal(params.id);
  const alpaca = result[0];
  const color = alpaca?.color?.color1?.original;
  const imageProps = generateImageParams(color);

  const statusText = alpaca?.status; // TODO Cleanup status coming from API instead of here

  let status = undefined;

  switch (statusText) {
    case "STATUS_ACTIVE":
      status = "active";
      break;
    case "STATUS_DEAD":
      status = "dead";
      break;
    case "STATUS_EXPORT":
      status = "export";
      break;
    default:
      console.log(`[LOG] No status match for ${status}`);
  }

  return (
    <>
      <header>
        <h2 className="text-4xl font-bold text-center tracking-tight text-black-almost sm:text-6xl pt-2">
          {alpaca?.alpacaShortName}
        </h2>
      </header>
      <main>
        <article id="alpaca" className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div
            data-testid="profile-graphic"
            className="border border-2 border-black-almost"
          >
            <Suspense fallback={<p>Loading alpacas...</p>}>
              <Image
                data-testid="profile-graphic-src"
                src={imageProps.source}
                alt={`Alpaca ${alpaca?.alpacaShortName}, graphic generated by AI`}
                width={imageProps.width}
                height={imageProps.height}
              />
            </Suspense>
          </div>

          <div className="bg-brown-400">
            <h3 className="text-2xl font-bold leading-loose tracking-tight">
              Lives at
            </h3>
            <div data-testid="farm-name">
              <div> {<FontAwesomeIcon icon={faCircleInfo} />}</div>
              <div>
                <a
                  data-testid="farm-name-link"
                  href={`/farm/${alpaca?.companyId}`}
                >
                  {alpaca?.keeperName}
                </a>
              </div>
            </div>
            <div data-testid="farm-public-private">
              <div>
                {alpaca?.public === true ? (
                  <FontAwesomeIcon icon={faHouseFlag} />
                ) : (
                  <FontAwesomeIcon icon={faKey} />
                )}
              </div>
              <div>
                {alpaca?.public === true ? "Public Farm" : "Private Farm"}
              </div>
            </div>

            <address>
              <div data-testid="farm-address-city">
                <div>{<FontAwesomeIcon icon={faLocationDot} />}</div>
                <div>City: {alpaca?.city}</div>
              </div>
            </address>
          </div>

          <div className="bg-brown-200 md:col-span-2">
            <h3 className="text-2xl font-bold leading-loose tracking-tight">
              Alpaca Detail
            </h3>
            <Suspense fallback={<p>Loading alpacas...</p>}>
              <AlpacaDetail status={status} alpaca={alpaca} />
            </Suspense>
          </div>
        </article>
      </main>
    </>
  );
}
